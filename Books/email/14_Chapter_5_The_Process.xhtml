<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

    <title>Chapter 5: The Process Principle, A World Without Email</title>
    <meta content="urn:uuid:fdcd3175-275e-4545-9822-dd3618c31f20" name="Adept.expected.resource"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="page_styles.css"/>

  


<link href="calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

</head>
<body>
    
		<div class="calibre1">
			<h2 class="x03-chapter-number" id="uO4dvIAIJkPaq3lov3yBGz8">Chapter 5</h2>
			<h2 class="x03-chapter-title" id="uauXsqQHntLxhqIwN7KF4BD">The Process Principle</h2>
			<h3 class="x05-head-a">The Power of Process</h3>
			<p class="x03-co-body-text">Early in my work on this book, I found myself browsing a little-used shelf, buried deep in the stacks of Georgetown’s Lauinger Library, filled with titles dissecting the nuances of industrial engineering. I came across a collection of articles from a now defunct, early twentieth-century business magazine called <i class="calibre5">System</i>, a publication dedicated to case studies about the then new “scientific” approach to management. These articles were almost universally breathless with excitement about how much more money could be made by industrial organizations once they began to think more systematically about how their work was actually conducted. The articles were also, it soon became clear, largely quite boring to the modern reader. Scientific management in this era seemed to have a lot to do with filling out forms in triplicate. <i class="calibre5">System</i> magazine loves forms. In its pages, you’ll find pictures of forms, and you’ll learn about their colors, how they’re perforated, even the material of the folders that hold them (manila is preferred).</p>
			<p class="x04-body-text">Hidden among these minutiae, however, I found a case study from a 1916 issue that caught my attention. The subject was so old-fashioned as to border on caricature: increasing the efficiency of the brass works operating within the Pullman train car company’s massive factory complex on Lake Calumet, fourteen miles south of Chicago. But there was something about the story, written under the direction of Pullman president John Runnells, that came across as surprisingly contemporary. Many of Pullman’s thirty-three departments depended on the brass works for key components, keeping the roughly 350 men working the foundries and machine tools in the brass works building perpetually busy. The problem with their system for dealing with all this work, as the article explains, was that there wasn’t really any system at all, but instead just a jumbled mess of “slipshod methods.”</p>
			<p class="x04-body-text">The brass department had only seven managers to help make sense of the constant influx of work requests. These managers were, of course, overwhelmed. As a result, everyone had to get informally involved in managing the workflow. “In many places throughout the plant, one man or another was devoting a part of his time to assist the active seven,” it notes. “All the planning was being done somewhere. And every man contributing by that much demoralized his own particular work by the interruption.” As the article elaborates, it became common for workers from other parts of the factory to show up at the brass department and wait around most of the day, bothering employees they knew, until they got the part they needed.</p>
			<p class="x04-body-text">In the first decades of the twentieth century, in other words, the Pullman brass works had devolved into something that looks a lot like the hyperactive hive mind workflow. However, unlike the many knowledge work organizations of today that are suffering from a similarly informal workflow, the leaders of Pullman, swept up in the excitement of scientific management, were willing to experiment with radical solutions.</p>
			<hr class="transition"/>
			<div aria-hidden="true" class="x04-space-break-orn">—</div>
			<p class="x03-co-body-text">To make the brass department more efficient, Pullman’s executive team did something counterintuitive: they made its operation more complicated. If you needed some brass work done, you now had to submit an official form that contained all the relevant information. To prevent employees from circumventing this process and reverting to the more convenient status quo of informally bothering workers, they literally locked the door and screened the windows. You now had no choice but to use the newly enforced “regular channel.”</p>
			<p class="x04-body-text">Once a request was submitted through a slot dedicated to this purpose, it was subjected to a rigorous procedure. A clerk would be tasked with figuring out a reasonable plan for accomplishing the work, including what raw source materials would be needed and how many worker hours were required to build the finished product. The details of the plan were then distributed to the proper subdepartments to ensure its timely execution. The specifics of the process get intricate at this point, but also fascinating. Using armies of clerks, the Pullman brass works seems to have replicated many of the tasks that today we can implement instantaneously with a click of a button on a computer application, implementing a sort of steampunk IT system, made up of step-by-step instructions and endless forms routed from desk to desk, like packets in a modern network. They even built custom hardware, my favorite example being an analog spreadsheet system that involved hanging brass tags on a large wooden board divided into a grid, which somehow allowed the work planners to quickly “cross-index” the current assignment of workers to machines.</p>
			<p class="x04-body-text">To implement this more structured workflow, Runnells had to spend more money. There used to be seven administrative staff to help organize the efforts of the 350 brass workers. Now there were forty-seven. “Here is a vast increase in overhead,” the article admits. Each of these new managers earned around $1,000 a year, significantly increasing the department’s salary costs. “But does it pay?” it asks. “It certainly has done so.” The new process dropped the production cost of each train car by $100, which not only covered the expense of the extra overhead but turned a “substantial profit.”</p>
			<p class="x04-body-text">The article makes it clear why the additional overhead increased profit. The old process—which was really no process at all—required the 350 workers who actually produced the department’s valuable output to constantly switch back and forth between informally managing their workflow and actually executing the work itself. This “demoralizing” double duty made them much slower at their actual skilled efforts, reducing the return the department was getting from its frontline workers.</p>
			<p class="x04-body-text">When the workflow was restructured to largely eliminate this double duty, the same workers could produce much more finished brass in the same amount of time. “The old lack of method is and never will be conducive to a betterment of standards,” the article concludes. “But systemization promptly showed a surprising rise in quality; workmen concentrated and the product showed the result.”</p>
			<hr class="transition"/>
			<div aria-hidden="true" class="x04-space-break-orn">—</div>
			<p class="x03-co-body-text">What industrial productivity hackers like John Runnells began to discover in the first decades of the twentieth century is that efficiency extends beyond the actions involved in physically manufacturing something. Equally important is how you coordinate this work. The problem with the Pullman brass works, in other words, was not that the workers were bad at casting and polishing brass components, but instead how these efforts were assigned and organized.</p>
			<p class="x04-body-text">Like many fundamental ideas, it took a while for this new mindset to take hold in the industrial sector. When Frederick Winslow Taylor, the father of the scientific management revolution, was first rising to prominence in the late 1890s, most of the energy in this movement focused on the act of production itself. This is the era that gave rise to the image of the draconian Taylorist consultant, stopwatch in hand, trying to eliminate wasted motion on the factory floor. Taylor himself made his reputation working with Bethlehem Steel between 1898 and 1900, where, among other improvements, he famously changed the style of shovel that workers used to move slag, increasing the speed with which they could transfer the material between piles. Pullman had integrated many of these ideas when they built their factory during this period. John Runnells mentions that the brass works had been laid out carefully with wide aisles, and tools organized on racks, to increase the efficiency with which the work was conducted. But as they learned, focusing only on physical productivity wasn’t enough to get the department humming.</p>
			<p class="x04-body-text">By the time the Pullman case study was published in 1916, a year after Taylor’s death, magazines like <i class="calibre5">System</i> had increasingly broadened their attention to include the information and decisions that surrounded manual labor. The magazine was less about better shovels and more about better forms to help figure out how much shoveling needed to be done. To be more concrete, we’ll use the term <i class="calibre5">production process</i> to talk about this combination of the actual manufacturing work with all the information and decisions that organize this work. The production process thinking demonstrated in that 1916 article went on to dominate industrial management, where it remains a core idea. In his 1983 cult business classic, <i class="calibre5">High Output Management</i>, for example, former Intel CEO Andy Grove dedicates the first two chapters to explaining the power of production process thinking. He notes that without this structure, you’re left with only one option for increasing productivity: figuring out how to get people to “work faster.” Once you see the whole process, however, a much more powerful option emerges: “We can change the nature of the work performed.” Optimize processes, he urged, not people.</p>
			<p class="x04-body-text">Which brings us back to the subject of this book: knowledge work. In this sector, we stubbornly reject this insight from industrial management. We largely ignore processes, investing our energy instead in figuring out how to make people faster. We obsess over hiring and promoting stars. We seek leadership consultants to help us motivate people to work longer and harder. We embrace innovations like the smartphone that allow more hours of the day to be punctuated with work. We put dry cleaners on our corporate campuses and wi-fi on our corporate buses, all in the service of finding faster ways to shovel more proverbial slag.</p>
			<p class="x04-body-text">Not surprisingly, this hasn’t worked out well at all.</p>
			<hr class="transition"/>
			<div aria-hidden="true" class="x04-space-break-orn">—</div>
			<p class="x03-co-body-text">The core claim of this chapter is that production process thinking applies equally well to knowledge work as it does to industrial manufacturing. Just because you produce things with your brain instead of your hands doesn’t change the fundamental reality that these efforts must still be coordinated. The importance of organizing decisions about who is working on what, and finding systematic ways to check in on this work as it evolves, applies as much to generating computer code or client proposals as it does to casting brass.</p>
			<p class="x04-body-text">In knowledge work, any type of valuable result that you or your organization regularly produces can be understood as the output of a production process. If you’re a marketing firm that runs publicity campaigns for your clients, your firm has a publicity campaign production process. If you work on an HR team that resolves salary issues, your team has a salary issue resolution process. If you’re a professor teaching a class that requires you to assign and grade problem sets, you have a problem set process.</p>
			<p class="x04-body-text">In the pages ahead, I’ll argue that if knowledge workers admit that these processes exist, and then clarify and optimize their operation, then they’ll discover the same result as the Pullman brass works: the expense of the extra overhead will be far outweighed by the boosts in productivity. When the costs and benefits are compared, it’s common to end up with a “substantial profit.” The problem, of course, is that few knowledge workers are used to thinking this way: they focus on people, not processes. As a result, the knowledge sector prefers to leave these processes unspecified, relying instead on the hyperactive hive mind workflow to informally organize their work.</p>
			<p class="x04-body-text">For sure, a major explanation for this process aversion is the insistence on knowledge worker autonomy that we explored earlier. Production processes, by definition, require rules about how work is coordinated. Rules reduce autonomy—creating friction with the belief that knowledge workers “must manage themselves,” as Peter Drucker commanded. This dislike of processes, however, goes beyond a general bias toward autonomy. There’s a belief, implicitly held by many knowledge workers, that the lack of processes in this sector is not just an unavoidable side effect of self-management, but actually a <i class="calibre5">smart</i> way to work. A lack of processes, it’s commonly understood, represents nimbleness and flexibility—a foundation for the type of outside-the-box thinking we’re constantly told is critical.</p>
			<p class="x04-body-text">This vision is fundamentally Rousseauian, a reference to the eighteenth-century Enlightenment philosopher Jean-Jacques Rousseau, who believed that human nature, before the introduction of political influence, was fundamentally virtuous. It claims that when left alone to work in whatever way seems natural, knowledge workers will adapt seamlessly to the complex conditions they confront, producing original solutions and game-changing innovations. In this worldview, codified work processes are artificial: they corrupt the Edenic creative, leading to bureaucracy and stagnation—a <i class="calibre5">Dilbert</i> comic brought to life.</p>
			<p class="x04-body-text">Having spent years studying the nuances of knowledge worker productivity, I believe this understanding is profoundly flawed. To stick with the analogy to Enlightenment philosophy, the reality of knowledge work is much more Hobbesian, a reference to Thomas Hobbes’s belief, originally detailed in <i class="calibre5">Leviathan</i>, that without the constraints of the state, human life is “nasty, brutish, and short.” When you reduce work to a state of nature by allowing processes to unfold informally, the resulting behavior is anything but utopian. Much as is observed in actual natural settings, in the informal process workplace, dominance hierarchies emerge. If you’re brash and disagreeable, or are a favorite of the boss, you can, like the strongest lion in the pride, avoid work you don’t like by staring down those who try to pass it off to you, ignoring their messages, or claiming overload. On the other hand, if you’re more reasonable and agreeable, you’ll end up overloaded with more work than makes sense for one person to handle. These setups are both demoralizing and a staggeringly inefficient deployment of attention capital. But without a countervailing force, these hierarchies are often unavoidable.</p>
			<p class="x04-body-text">Also as in natural settings, in workplaces without well-defined processes, energy minimization becomes prioritized. This is fundamental human nature: if there’s no structure surrounding how hard efforts are coordinated, we default to our instinct to not expend any more energy than is necessary. Most of us are guilty of acting on this instinct when given a chance. An email arrives that informally represents a new responsibility for you to manage; because there’s no formal process in place to assign the work or track its progress, you seek instead the easiest way to get the responsibility off your plate—even if just temporarily—so you send a quick reply asking for an ambiguous clarification. Thus unfolds a game of obligation hot potato, as messages bounce around, each temporarily shifting responsibility from one inbox to another, until a deadline or irate boss finally stops the music, leading to a last-minute scramble to churn out a barely acceptable result. This, too, is obviously a terribly inefficient way to get work done.</p>
			<p class="x04-body-text">A well-designed production process, in other words, isn’t an obstacle to efficient knowledge work, but is instead often a precondition. Which brings us to the principle that this chapter elaborates.</p>
			<aside class="sidebar">
				<div class="w10r-email">
					<img alt="" class="w" src="page_230.jpg"/>
				</div>
				<h3 class="x10-sidebar-title">The Process Principle</h3>
				<p class="x10-sidebar-text-last">Introducing smart production processes to knowledge work can dramatically increase performance and make the work much less draining.</p>
				<div class="clear"></div>
			</aside>
			<p class="x04-body-text">To move past the shortcomings of the hyperactive hive mind workflow, we must abandon our Rousseauian optimism that knowledge workers left to a state of nature will thrive. To get the most out of our attention capital, we need processes, and this is true for both organizations and individual knowledge workers. To reiterate the obvious, I’m not talking about processes that somehow attempt to reduce the skilled and dynamic elements of knowledge work to step-by-step recipes. As we established in the last chapter, our reform efforts in this book focus on the <i class="calibre5">workflows</i> that coordinate knowledge work, not the skilled <i class="calibre5">execution</i> of the work itself. This holds true for our discussion of production processes, which help make sense of who is working on what but don’t specify the details of how this work unfolds; replacing, in other words, endless back-and-forth hive mind messaging with guidelines that let knowledge workers spend more of their time actually working instead of talking about their work—the cognitive equivalent of John Runnells’s revamped brass foundry.</p>
			<p class="x04-body-text">The remainder of this chapter explores ideas for building smart production processes in both your knowledge work organization and your individual professional life. We’ll begin, as is now our habit, with a concrete case study that we can reference in the discussions that follow. In this case, we’ll take a close look at a twelve-person media company that’s pushed its embrace of the process principle to a profitable extreme.</p>
			<h3 class="x05-head-a">Case Study: Optimizing the Optimizers</h3>
			<p class="x03-co-body-text">Optimize Enterprises is a media company that focuses on self-improvement content. Its core product is a subscription service that provides weekly in-depth book summaries, as well as daily lessons, delivered as short videos. You can access the service through a website or a smartphone app. Optimize also recently began a coach training program, which proved a surprise hit. More than one thousand coaches signed up for the first round of training, a cycle that lasts three hundred days. The company employs twelve full-time team members, who work in tandem with eight to twelve part-time contractors. There’s no physical headquarters for Optimize, meaning this team operates entirely remotely. As the president and founder, Brian Johnson, told me when I interviewed him for this book, the company is on track for $2.5 million in annual revenue.</p>
			<p class="x04-body-text">The reason Johnson’s company interested me is not its size or product offerings, but instead the details of how it operates. As Johnson explained early in our conversation: “We don’t email at all. Zero. There will never be an email between a team member and another team member.” Though he doesn’t use this exact terminology, Johnson and his team were able to sidestep the hyperactive hive mind by adopting a production process mindset. Motivated by his intuitive dislike of interruption and harried busyness, Johnson had his team methodically break down their work into processes that could be clearly stated and (appropriately enough) optimized to maximize the time spent doing useful work and minimize the time spent moving back and forth between work and inboxes. “Our team is absolutely committed to single-tasking,” Johnson told me. “You do one thing at a time.”</p>
			<p class="x04-body-text">One of Optimize’s more intricate processes, for example, involves the production of the daily lesson videos that get delivered to multiple platforms each morning. The work required for this production is substantial. Johnson is responsible for actually coming up with and writing the lessons. He’s also the person who delivers the lessons on camera for the video. But beyond this, other tasks lurk: the text versions of the lessons must be edited, the videos must be filmed, the film clips must be edited, and everything must be launched to multiple platforms at just the right time. Around a half dozen people are involved in executing these varied steps.</p>
			<p class="x04-body-text">In many organizations, the sheer volume of interconnected action required to keep this content production machinery working would seem to necessitate endless back-and-forth urgent emails or hyperactive Slack chattering. But not at Optimize: over the years, they’ve built a production process for these efforts that eliminates almost all informal interaction, allowing those involved to focus nearly 100 percent of their energy on actually performing the skilled work needed to keep the pipeline of high-quality content filled and flowing.</p>
			<p class="x04-body-text">The process starts with a shared spreadsheet. When Johnson comes up with an idea for a lesson, he adds a title and subtitle to the spreadsheet. Each row has a <i class="calibre5">status</i> column, which Johnson sets to “idea,” marking the lesson as still in the earliest stages of development. Once Johnson gets around to writing the lesson, he’ll upload it to a shared directory in the company’s Dropbox account, then add a link to this draft to the spreadsheet row for the lesson. At this point, he’ll change its status to “ready for editing.” Johnson’s editor doesn’t interact directly with Johnson, but instead monitors the spreadsheet. When he sees a lesson is ready to be edited, he downloads it, puts it into the right format, edits it, and then moves it into a postproduction Dropbox folder that holds text that’s ready to go live.</p>
			<p class="x04-body-text">At this point, the editor changes the status of the lesson to “ready for filming.” Johnson has a studio in his house where he films lessons. He has a standing schedule with his film crew that specifies which days each month they come to knock out a chunk of lesson videos. When the crew arrives, there’s no ambiguity about what they’ll be filming: all lessons currently in the “ready for filming” status. After a film day, the crew will upload the raw files to a shared Dropbox directory dedicated to the editing process. The statuses of these lessons are now changed on the spreadsheet to indicate they are ready to be edited. At this point, Optimize’s film editor will download the clips from the dedicated directory, run them through the standard processing to get them ready for release, and then upload them to a shared postproduction folder. The lessons’ statuses are changed to indicate they are ready for release, and a release date is chosen and added to each corresponding row.</p>
			<p class="x04-body-text">The final step is the actual release of the written and video versions of the lessons on their scheduled release dates. Two content management service (CMS) specialists execute this last step. They monitor the spreadsheet to see which lessons are scheduled for which days. They download the content from the postproduction directories and schedule it for release using the CMS platform. When the time comes, the lesson that started as just an idea in Johnson’s mind goes live across the Optimize networks.</p>
			<p class="x04-body-text">Here’s what amazed me about this production process: it coordinates a fair-sized group of specialists, spread out around the world, to accomplish the complicated feat of releasing highly produced multimedia content on a demanding daily schedule—all without requiring even a single unscheduled email or instant message. Not one of the skilled knowledge workers involved in this process ever needs to load up an inbox or glance at a messenger channel. Almost 100 percent of their time is dedicated to actually doing the work they’re trained to perform, and when they’re done working, they’re done working—there’s nothing to check, nothing urgent requiring a reply.</p>
			<p class="x04-body-text">To be fair, media production is a structured endeavor. Many knowledge workers deal instead with a more amorphous and constantly shifting set of demands. To understand how these latter efforts can be tamed with processes, I asked Johnson to walk me through a typical day of one of the higher-level managers in his company—someone who has to oversee various onetime projects, as well as produce original strategy on a regular basis. As Johnson explained, the manager in question has a schedule that begins every day with three hours of uninterrupted deep work before he receives “even a single input.” This is time set aside for the manager to think intensely about his projects—making informed decisions on how to go forward, where to focus next, what to improve, and what to ignore.</p>
			<p class="x04-body-text">Only after this morning block ends does the manager turn his attention to actively managing the projects he runs. To make this project management more systematic, Optimize deploys an online collaboration tool called Flow. In its simplest form, Flow allows you to track tasks associated with projects. Each task is represented as a card that can be assigned to particular people and given a deadline. Files and information related to the task can be attached to the card, and discussion tools allow those working on the task to hold conversations directly on the virtual card in a forum-style format. Finally, these cards can be moved around and arranged into different columns, where each column is labeled to represent a different category of task or status.</p>
			<p class="x04-body-text">Similar to how Devesh’s marketing firm used Trello in the case study reviewed in the last chapter, these virtual cards arranged on virtual boards are the hub around which work on projects unfolds. Instead of having all communication for all work flow through a general-purpose inbox or channel, you now choose to work on a specific project by navigating to its page and checking in on the tasks to which you’re assigned. This is exactly what our Optimize manager does after his deep work block concludes: he checks in on the projects one by one, joining the card-centric conversations when needed and more generally seeing where things currently stand.</p>
			<p class="x04-body-text">After checking in on these projects in Flow, the manager typically has one-on-one FaceTime meetings with the various team members he supervises. These conversations are used to discuss new initiatives or resolve issues with ongoing tasks. Most projects also have a regular meeting scheduled each week to help synchronize everyone’s efforts and efficiently solve group issues. The manager participates in these meetings, updating the corresponding project pages as needed to reflect any decisions made about the work. Like all Optimize employees, his day ends between 4:00 and 5:00 p.m. Johnson is insistent on enforcing a “digital sunset” for his company: he wants his employees to end their workday at a reasonable hour to spend time with family and recharge. Because there are no email inboxes to check, our manager, as with all Optimize employees, will actually be free from work until the next morning.</p>
			<p class="x04-body-text">Here are a few other odds and ends I learned about Optimize’s processes. Though they forbid internal email, they do use email to communicate with external partners. Their interaction with these inboxes, however, is highly structured. Johnson says those responsible for these external-facing email addresses have “discrete blocks” in which they check for messages, typically once a day. To handle customer service, Optimize deploys a tool called Intercom that streamlines the process of responding to the most common requests and prevents pileups of ambiguous emails from customers. Optimize also hosts a company-wide meeting every Monday (using teleconferencing software) to synchronize efforts.</p>
			<p class="x04-body-text">Perhaps most interesting of all—and a real surprise when I first heard it—Optimize does use Slack. As Johnson explained, however, its engagement with this tool looks significantly different from the cliché of constant hive mind chatter. Because almost all the interactions required for Optimize’s core work efforts are already captured by well-defined processes, there’s not much left to discuss on these chat channels. This tool is mainly used for two purposes. The first is to “celebrate wins”: if someone accomplishes something important, either professionally or personally, they might share it on the company Slack channel. Johnson describes this as a chance to virtually “high-five” one another. Because the company is virtual, he explained, it’s important to have some outlet for social interaction. Their other use for Slack is to schedule the meetings in which most actual work interaction occurs.</p>
			<p class="x04-body-text">Optimize employees truly do use Slack asynchronously—checking it only once or twice a day in between other tasks. It would be pointless to check Slack more often, as there is not enough actually shared on the channel to make it worthwhile. In a typical day, an Optimize employee might end up using Slack for perhaps a handful of minutes—maybe to deliver a virtual high five or provide a time to a manager trying to set up a meeting.</p>
			<p class="x04-body-text">Finally, to support this process-centric approach to work, Johnson insists that the whole company take processes seriously. He sees getting these processes right as the core to their success. Every employee of Optimize is expected to spend at least the first ninety minutes of every day in a deep work block, free from inputs (some people, like the manager profiled above, spend much more). One of the key uses of this morning block is to think about processes and how to improve them. As Johnson explained to me, it takes time to figure out how best to structure the crazy inputs and interaction that surround most work processes. He’s diligent in making sure that everyone keeps prioritizing this. “You need time away from inputs to figure out how best to systematize those inputs,” he explained. This is perhaps Optimize’s most important process of all: the process that helps improve the existing processes.</p>
			<h3 class="x05-head-a">Who’s Doing What and How? Properties of Effective Processes</h3>
			<p class="x03-co-body-text">Let’s say you’ve accepted the challenge of designing better knowledge work production processes. What makes a process effective in this context? Consider the production process used by Brian Johnson’s Optimize Enterprises for producing daily multimedia content. Once Johnson enters a new lesson title and subtitle into his team’s shared spreadsheet, the steps for getting from this initial stage to released content are all organized in a sequence of predetermined phases. At each phase, it’s clear what work needs to be accomplished, where the relevant files can be found, who is supposed to accomplish the work, and what happens once they’re done.</p>
			<p class="x04-body-text">Optimize’s processes for handling the more varied onetime projects can’t rely on exact sequences of predetermined phases, as each of these projects is different. But the overall workflow remains highly structured. Information about who is working on what, as well as how it’s going, is captured using the Flow project management tool. Decisions about what tasks to add and who to assign to them are made in regularly scheduled meetings. If you’re working on one of these projects, the rhythm of your work is unambiguous. You check in on the task cards assigned to you in Flow, then put your head down to work on these tasks, updating the cards when done. Occasionally, you attend meetings when more involved discussion or decisions are required. The results of these meetings are immediately reflected back in Flow. This project-focused process similarly minimizes the time spent communicating about work and maximizes the time spent actually taking productive action.</p>
			<p class="x04-body-text">These examples of effective production processes share the following properties:</p>
			<ol class="calibre9">
				<li class="x07-list-numbered-first">
					<p class="x07-list-bulleted-first1">It’s easy to review who is working on what and how it’s going.</p>
				</li>
				<li class="x07-list-numbered">
					<p class="x07-list-bulleted-first1">Work can unfold without significant amounts of unscheduled communication.</p>
				</li>
				<li class="x07-list-numbered-last">
					<p class="x07-list-bulleted-first1">There’s a known procedure for updating work assignments as the process progresses.</p>
				</li>
			</ol>
			<p class="x04-body-text">For our daily lesson example, the first property is satisfied by the <i class="calibre5">status</i> field in the shared spreadsheet, which tells the team exactly where each lesson currently resides in the production pipeline. The second and third properties are satisfied by the predetermined sequence of phases, which specifies exactly what you should be doing when it’s your turn to work on a lesson, where to find the needed files when you begin, where to put these files when you’re done working on them, and what comes next once the phase is complete.</p>
			<p class="x04-body-text">For the project process, the first property is satisfied by Flow, which provides a nice visual interface that displays all the active tasks for a project. Small headshot icons on each task represent the people who are assigned to it. When working on one of these projects, there’s no ambiguity about what you’re supposed to be doing in the moment. The second property is satisfied by a combination of Flow’s collaboration tools, built right into the task cards, and the rhythm of regular short status meetings. Communication about the project is confined to these narrow channels. Finally, to satisfy the third property, decisions about who should be working on new tasks are typically made during meetings and are then reflected in Flow.</p>
			<p class="x04-body-text">A good production process, in other words, should minimize both ambiguity about what’s going on and the amount of unscheduled communication required to accomplish this work. Notice, nothing about these properties restricts the knowledge worker’s autonomy in figuring out <i class="calibre5">how</i> they get their work done; the focus remains on coordinating this work. Also notice that these properties are unlikely to lead to stifling bureaucracy, as the processes they produce are optimized to <i class="calibre5">reduce</i> the overhead—in terms of both context shifts and time—surrounding the actual act of producing valuable things. Workers at the highly systematized Optimize Enterprises likely feel much more empowered and much less overwhelmed than those shackled to the status quo of the hyperactive hive mind workflow.</p>
			<p class="x04-body-text">The main issue with production processes in the knowledge work context is that they often must be custom-built to fit each circumstance. What works for Optimize, for example, might not work for a mobile-app development company, and what works for the app company likely won’t work for a one-person accounting shop. With this reality in mind, the remainder of this chapter explores several different best practices that you can deploy when trying to design the production processes that will work best for your specific situation.</p>
			<h3 class="x05-head-a">Cards in Columns: The Task Board Revolution</h3>
			<p class="x03-co-body-text">An executive whom I’ll call Alex runs a fifteen-person team that operates like an independent start-up within a major national healthcare provider. His team focuses on data analysis. If, for example, you’re a researcher working for this provider, and you win a grant that requires you to perform some complicated number crunching, Alex’s team can build you the tools you need. They also implement internal projects that help the provider run more efficiently, even spinning off some of these solutions as standalone software products. Given these various roles, Alex, as you might expect, has to juggle many different demands on his team’s time.</p>
			<p class="x04-body-text">A big part of how he pulls off this feat is immediately visible when you walk into his office. Dominating one of the walls is a three-by-eight-foot chalkboard. It’s divided into five columns: <i class="calibre5">plan</i>, <i class="calibre5">ready</i>, <i class="calibre5">blocked</i>, <i class="calibre5">work</i>, and <i class="calibre5">done.</i> The <i class="calibre5">work</i> column is further divided into two sub-columns: <i class="calibre5">in development</i> and <i class="calibre5">testing.</i> Taped under each column are stacks of hand-labeled notecards. If you stick around Alex’s office longer, a pattern will emerge. Most mornings, the project leaders on Alex’s team gather around “the big board,” as they’ve taken to calling it, and discuss the cards. As they talk, the cards are moved: some are shifted from one column to another, while others are arranged into a different order in their current column. What you won’t see is these project leads splitting their attention between the discussion at hand and their email inboxes. Alex’s team isn’t big on email (or instant messenger for that matter): they see this technology primarily as a tool for interacting with external partners. The information that really matters for their getting things done is all right in front of them, scrawled on cards taped to a chalkboard.</p>
			<p class="x04-body-text">As Alex explained to me when I asked him how he avoids the hyperactive hive mind workflow, the chalkboard in his office is not the only tool used by his team. Each notecard taped to the big board corresponds to a project. When a project makes it to the <i class="calibre5">work</i> column, the group of employees assigned to the project will create their own board dedicated to the tasks required to accomplish the project. Unlike the big board, these smaller boards are typically implemented in software. Alex’s team prefers two tools that are popular in the software development community, called Asana and Jira, for creating these digital boards. Once a project is underway, those working on it will hold their own regular meetings to update the project’s board—discussing the cards and rearranging them among the columns.</p>
			<p class="x04-body-text">When I spoke with Alex, for example, there was a card on the big board labeled with a project that involved the process used by one of the provider’s hospitals for storing the results of the genetic tests they conduct on babies. At the time, the data was housed on an FTP server. Alex’s team was tasked with figuring out how to move this information into a more flexible database. He explained to me how this project would advance:</p>
			<blockquote class="calibre6">
				<p class="x06-extract-1p">We know about this project. It’s represented as a card in the <i class="calibre5">plan</i> column. It’s ordered behind three other things that have to get done first. Once it comes up to the top of this column, we will discuss it and come up with detailed tasks to add into Asana or Jira. On the big board, we’ll then move its card to <i class="calibre5">in development.</i></p>
			</blockquote>
			<p class="x04-body-text">Alex typically holds these discussion meetings every morning. If his development teams are fully engaged in projects—“rock and rolling”—he’ll temporarily scale back these big picture meetings to once per week until there’s more planning to be done.</p>
			<hr class="transition"/>
			<div aria-hidden="true" class="x04-space-break-orn">—</div>
			<p class="x03-co-body-text">This is the third time we’ve encountered a similar pattern: information about knowledge work arranged into columns of cards on a board. Alex’s team uses both physical chalkboards and virtual boards implemented by Asana. Optimize Enterprises relies on Flow. Devesh, from the last chapter, uses Trello.</p>
			<p class="x04-body-text">The general idea of posting tasks on boards to organize work is not new. Hospital ERs, for example, have long relied on <i class="calibre5">tracking boards</i>: whiteboards, divided into a grid, that list every patient being treated, including their room, the doctor or nurse assigned, and their triage level. For the harried staff, the tracking board provides, at a glance, a good overview of the current state of the emergency room. It also simplifies the tasks of figuring out where to put new patients and where doctors should dedicate their time. As mentioned, even the early twentieth-century Pullman train company relied on boards. They used brass tags hung on a wooden board to summarize the assignment of brass workers to machinery.</p>
			<p class="x04-body-text">Recently, a more refined approach to deploying tasks on boards as a productivity tool has emerged. In this approach, boards are divided into named columns, and work tasks are arranged as vertical stacks of cards under the column that best describes their status. Sometimes, as with the <i class="calibre5">plan</i> column on Alex’s big board, the vertical ordering of cards indicates priority. This is the general setup deployed by Alex, Devesh, and Brian Johnson.</p>
			<p class="x04-body-text">The source of this approach to organizing work can be found in the software development community, which over the past couple of decades has increasingly embraced so-called <i class="calibre5">agile</i> methodologies for producing software. The basic ideas behind agile were first summarized in a 2001 manifesto penned by a group of seventeen programmers and project managers. The manifesto opens optimistically: “We are uncovering better ways of developing software.” It then lays out twelve principles, each explained in plain language. “Our highest priority is to satisfy the customer through early and continuous delivery of valuable software,” reads one principle. “Simplicity—the art of maximizing the amount of work not done—is essential,” reads another.</p>
			<p class="x04-body-text">To understand agile, you must understand what it replaces. Software development used to rely on lumbering, complicated project plans that would quixotically attempt to figure out in advance all the work required to produce a major piece of software. The idea was that, given one of these plans, often lovingly rendered in striated, multicolored Gantt charts, you could know exactly how many programmers to assign at each stage and provide your customers with accurate release schedules. This approach made sense in theory, but for anything but the simplest projects, these plans almost never proved accurate. Producing software is not like producing cars: it’s hard to accurately estimate how long different steps will take or what problems might arise. It also turned out that customers didn’t always know everything they needed in advance, so the features being developed would change on the fly, further undermining the schedule.</p>
			<p class="x04-body-text">The agile mindset argues that software development should be broken down into smaller chunks that can be released into the wild as quickly as possible. As users provide feedback, the information can be quickly integrated into future updates—creating a fluid feedback cycle that evolves useful software instead of trying to build it perfectly all at once before releasing. As more and more software became web-based, simplifying the process of releasing updates and soliciting feedback, various agile methodologies became extremely popular in the world of developers.</p>
			<p class="x04-body-text">The word <i class="calibre5">various</i> is important here. Agile by itself is not an organizational system; it instead defines a general approach that is realized by multiple different specific systems. Two of the more popular systems at the moment are Scrum and Kanban, which, if you have any involvement with software, are terms you’ve at the very least heard mentioned. Generally speaking, Scrum breaks work down into <i class="calibre5">sprints</i>, where a team dedicates itself completely to delivering a particular update before moving on to the next. Kanban, by contrast, emphasizes a more continuous flow of tasks through a fixed set of phases, with a general goal of minimizing the current <i class="calibre5">works in progress</i> at any one phase, preventing bottlenecks.</p>
			<p class="x04-body-text">Which brings us back to boards. When you look past the low-level details of their implementation, you’ll notice that what Scrum and Kanban share is the use of a <i class="calibre5">task board</i> in which cards corresponding to tasks are stacked vertically in columns corresponding to phases of the software development process. In Scrum, for example, there’s often a column called <i class="calibre5">backlog</i> for features that have been identified as potentially important but have not yet been tackled. There’s also a column for features currently being worked on by a team of programmers engaged in a sprint, a column for features that have been completed and are now being tested, and a column for features that are complete, tested, and ready for release.</p>
			<p class="x04-body-text">It’s no coincidence that both these systems ended up using the same means of organizing tasks. A key idea driving agile project management is that humans are naturally pretty good at planning. You don’t need complicated project management strategies to figure out what to work on next; it’s usually sufficient to just have a group of informed engineers get together and discuss what makes sense. The key caveat in this belief, however, is that we’re able to effectively apply our planning instinct <i class="calibre5">only</i> <i class="calibre5">if</i> <i class="calibre5">we have a good grasp of all the relevant</i> <i class="calibre5">information</i>—what tasks are already being worked on, what needs to be done, where there are bottlenecks, and so on. Cards stacked on boards turn out to be an amazingly effective method for quickly communicating this information.</p>
			<p class="x04-body-text">This property of task boards makes them applicable to more than just software development, which is why we see them show up frequently in examples of forward-thinking knowledge work organizations trying to become more systematic about their processes. It’s also why I recommend them as something to consider when developing processes for your own organization. To aid in this task, I’ve collected several best practices for getting the most out of task boards in the context of knowledge work.</p>
			<h4 class="x05-head-b">Task Board Practice #1: Cards Should Be Clear and Informative</h4>
			<p class="x03-co-body-text">At the core of the task board method is stacking cards in columns. These cards typically correspond to specific work tasks. It’s important that these tasks are clearly described: there shouldn’t be ambiguity about what efforts each card represents.</p>
			<p class="x04-body-text">Also critical to successfully deploying this approach is having a clear method to assign cards to individuals. Digital systems such as Flow provide assignment as a native feature, allowing you to see small thumbnail headshots of the people associated with a task card. But even in systems that don’t offer assignment functionality, it’s easy to add this information to the card’s title. In some cases, the assignments are implied by the columns; perhaps, for example, on a small development team, there’s a certain person who’s always responsible for the tasks in the <i class="calibre5">testing</i> column. What’s important is that when a card gets moved to a column indicating that it should be actively worked on, there’s no uncertainty about who is responsible for this work.</p>
			<p class="x04-body-text">Finally, there should be an easy method to associate relevant information with each card. When using digital board tools such as Flow or Trello, you can attach files and long text descriptions to the virtual cards. This is immensely useful, as it organizes all the information relevant to the task in one place. This was something that struck me when I was studying the Trello boards used by Devesh. One of the cards I encountered on his boards, for example, corresponded to the task of writing up an analytics report for a client. Attached to the card were the relevant files containing the data for the report and some notes on how to format it. For the person working on this task, there’s now no need to sift through cluttered inboxes or chat archives to find these materials. When it comes time to work on the report, everything that’s needed is all in one place.</p>
			<p class="x04-body-text">If you’re using a physical board, then you obviously can’t directly attach digital files or long descriptions to cards. But you can achieve more or less the same effect by using a service like Dropbox to set up a shared directory for the board, with a subdirectory for each column. You can store information relevant to the cards in a given column in the corresponding subdirectory—simplifying the task of finding this information when the time comes.</p>
			<h4 class="x05-head-b">Task Board Practice #2: When in Doubt, Start with Kanban’s Default Columns</h4>
			<p class="x03-co-body-text">Once you leave the comfort of the entrenched guidelines surrounding the use of task boards in software development, it’s not necessarily obvious how to set them up for your specific knowledge work context. When in doubt, start with the default setup from the Kanban methodology, which includes just three columns: <i class="calibre5">to do</i>, <i class="calibre5">doing</i>, and <i class="calibre5">done.</i> You can then elaborate this foundation as needed.</p>
			<p class="x04-body-text">On Devesh’s boards, for example, he had a column for design tasks and a column for implementing client campaigns. This modification to the Kanban defaults proved useful in the context of his marketing firm because design and implementation work pull from two different pools of employees. The Flow boards used at Optimize Enterprises, by contrast, tended to deploy the simpler setup of a single column dedicated to all tasks being executed for the project at the moment.</p>
			<p class="x04-body-text">Another useful expansion of the Kanban defaults is to include a column for storing background notes and research generally relevant to a project. This hack technically breaks the convention that every card corresponds to a task, but when using digital boards it can be a useful way of keeping information close to where it might be needed. At Devesh’s marketing company, for example, a column of this type was used to capture notes from client phone calls.</p>
			<h4 class="x05-head-b">Task Board Practice #3: Hold Regular Review Meetings</h4>
			<p class="x03-co-body-text">As argued earlier, a key property for any knowledge work production process is an effective system for deciding who is working on what. In the context of task boards, these decisions are reflected by the cards on the board and to whom they’re assigned. But how should these decisions be made? A foundational idea in agile methodology is that short meetings held on a regular schedule are by far the best way to review and update task boards. Agile rejects the idea that you should let these decisions unfold informally in asynchronous conversations on email or instant messenger. When using task boards for your own knowledge work production processes, you should abide by this same rule.</p>
			<p class="x04-body-text">A standard format for these meetings is to have each person briefly summarize what they’re working on, what they need from other people to make progress for the rest of the day, and what happened with the tasks they had committed to working on the day before. It’s during these <i class="calibre5">review meetings</i> that new tasks can be identified and new people assigned to them. The meetings also help remove bottlenecks caused by one person waiting to hear from another person, and they provide an important sense of accountability: if you slack off on the task you committed to during today’s meeting, you’ll have to reveal this lack of results publicly during tomorrow’s review.</p>
			<p class="x04-body-text">These regular review meetings work well in part because they’re collaborative: everyone feels like they were part of deciding what tasks they’re tackling. They also work well because they’re unambiguous: everyone is present for the conversation that decides current work assignments. Finally, as argued in part 1 of this book, real-time communication is typically a much more effective means of coordinating individuals than drawn-out back-and-forth messaging. One ten-minute gathering can eliminate dozens of ambiguous messages that would otherwise generate frequent interruptions throughout the day.</p>
			<p class="x04-body-text">Of course, many modern knowledge work organizations include remote employees, making it impossible for everyone working with a given task board to show up in person for these review meetings. The standard solution is to use conferencing software such as Skype, Zoom, or FaceTime (if the groups are small). The key is real-time interaction.</p>
			<h4 class="x05-head-b">Task Board Practice #4: Use Card Conversations to Replace Hive Mind Chatter</h4>
			<p class="x03-co-body-text">One of the more powerful features of digital board systems is the discussion function built into each virtual card. In Trello and Flow, for example, in addition to attaching files and information to cards, you’ll find tools for message board–style conversation stored directly on each card. People can ask questions, and others can later chime in with answers. In the knowledge work organizations I observed that used digital task boards, these <i class="calibre5">card conversations</i> proved a critical part of coordinating work on specific tasks. People would check in on these conversations several times each day, reducing the amount of discussion required at the regular review meetings and eliminating the need for general-purpose communication tools like email, which do a poor job of structuring information and quickly become cluttered.</p>
			<p class="x04-body-text">A fair concern is whether these card conversations might allow hyperactive hive mind–style unstructured messaging to sneak back into your organization. Based on what I observed, however, the experience of card conversation was significantly different from the experience of hive mind chatter. Devesh, for example, described his shift from email to card conversations as “flipping the script” on communication. When you have a general email inbox through which all discussion flows, you’re forced to continually check this inbox, which then confronts you with discussions about many different projects. When you rely on card conversations, on the other hand, the only way to encounter the discussion surrounding a given project is to navigate to that project’s board. At this point, you’re encountering conversation about <i class="calibre5">only</i> this project. This flips the script because now you decide what project you want to talk about, as opposed to allowing the projects to decide for you.</p>
			<p class="x04-body-text">Card conversations also come with different communication expectations. It’s generally assumed that you’ll check in on your relevant task cards only a few times a day, so there’s no sense of urgency or any expectation that you’ll deliver rapid responses. The granularity of work therefore increases and people get used to tackling one thing at a time, for long periods, before moving on to the next. On the other hand, when these conversations occur on a general-purpose communication tool, the awareness that everyone is checking this tool more frequently leads to heightened expectations surrounding response time for all communication, leading inevitably back to a full-speed hyperactive hive mind workflow. (See the discussion in chapter 3 about the cycle of responsiveness.)</p>
			<p class="x04-body-text">Card conversations are also much more structured than hive mind chatter, as conversations are attached to specific tasks and are accompanied by all the relevant files for that task. If I’m running a project, for example, and I want to check the status of a key task, I can simply flip the virtual card and quickly review all the relevant discussion—bringing me up to speed. This contrasts with the hive mind workflow, in which all this information exists scattered among various people’s inboxes or buried in crowded chat channels.</p>
			<p class="x04-body-text">There’s a slower pace and peacefulness that seems to accompany this shift of discussion toward card conversations. To avoid the need to wrangle an always-filling inbox is a benefit that shouldn’t be underestimated.</p>
			<h3 class="x05-head-a">Personal Kanban: Organizing Your Professional Life with Individual Task Boards</h3>
			<p class="x03-co-body-text">Jim Benson thinks a lot about improving knowledge work. His consulting firm, Modus Cooperandi, specializes in building custom processes that improve collaboration at knowledge work organizations. Likely influenced by his former career as a software entrepreneur well versed in agile methodologies, Benson’s processes often make use of task boards. The photos featured on the Modus Cooperandi website are filled with brightly colored Post-it notes arranged in complex columns.</p>
			<p class="x04-body-text">In personal productivity circles, however, Benson is better known for a slim volume that he self-published back in 2011. It’s titled <i class="calibre5">Personal Kanban</i>, and it offers a seductive promise: the agile methodologies that help teams make sense of complex projects can be used to tame the complex mess of obligations in your individual professional life.</p>
			<p class="x04-body-text">The core ideas behind <i class="calibre5">Personal Kanban</i> are simple enough that Benson can summarize them in a five-minute video that he features on the book’s website. In the video, Benson stands in front of a large white notepad mounted on an easel. He fills the center of the sheet with a jumble of colored Post-it notes, which represent “expectations” from family, friends, colleagues, bosses, and ourselves. “All of these things become this big kind of congealed mass in our minds that we have to pull apart every time we decide something we would like to do,” he explains. This requires us to try to pick this “mass” apart and think through all these different obligations just to figure out what we should do next. “That’s not fun,” Benson concludes.</p>
			<p class="x04-body-text">The Personal Kanban solution to this problem is to organize this mess of expectations with a personal task board. Benson suggests using three columns. The first is labeled <i class="calibre5">options</i>, and it’s where you arrange all your obligations into neat stacks of Post-it notes: one note per task. “Now we’ve taken that horrible mass of work and turned it into a very cognitively pleasing rectangle.” The second column is labeled <i class="calibre5">doing.</i> This is where you move the Post-its corresponding to the tasks that you’re actually working on right now. The key to this column—and a big part of the secret sauce of Kanban systems in general—is that you should maintain a strict limit on how many tasks you’re allowed to be doing at any given time. In Kanban-speak, this is called the <i class="calibre5">works in progress (WIP) limit.</i> In the video, Benson sets this limit to three. As he explains, if you instead try to make progress on dozens of different tasks all at the same time, you end up with a “messy life.” He convincingly argues that it’s better to do a small number of things at any one time: give them your full concentration, and only when you finish one should you replace it with something new.</p>
			<p class="x04-body-text">Which brings us to the <i class="calibre5">done</i> column. This is where you move the tasks you complete. In theory, you could just discard a Post-it once you completed its task, but as Benson implies, the psychological boost of physically moving the Post-it from <i class="calibre5">doing</i> to <i class="calibre5">done</i> is a powerful motivator.</p>
			<p class="x04-body-text">In the years since Benson published <i class="calibre5">Personal Kanban</i>, the system has gathered a cult following. A YouTube search reveals countless homemade videos from fans explaining their own takes on Benson’s approach to personal productivity. If you assume that all these fans strictly adhere to Benson’s original three-column design, then you must not know much about the personal productivity community. As you watch these fan videos, you’ll encounter many intensely complex, custom-built variations.</p>
			<p class="x04-body-text">One such video replaces the <i class="calibre5">doing</i> column with a <i class="calibre5">ready</i> column divided into three sub-columns: <i class="calibre5">cold</i>, <i class="calibre5">warm</i>, and <i class="calibre5">hot</i>—allowing a more nuanced take on the status of pending tasks. Another video, recorded by a professor who teaches supply chain management, demonstrates a personal board format so complicated that it seems to require graduate training in supply chain management to even understand. He divides his <i class="calibre5">options</i> column into color-coded rows that he calls “value streams,” each dedicated to a different type of task and featuring Post-it notes of a matching color. These rows are further divided into internal columns. One column is a designated “holding tank” of tasks that he cannot get to in the current semester, while the other column is for tasks that he does hope to get done. Each row has a “staging area” position where the next task of that stream to be accomplished can be moved. From this larger number of staging areas, tasks can then be shifted into the small number of <i class="calibre5">doing</i> slots, constrained by a WIP limit of three. His <i class="calibre5">done</i> column maintains the same color-coded value stream rows as his <i class="calibre5">doing</i> column, allowing him, at a quick glance, to get a sense of how he has recently been allocating his time.</p>
			<hr class="transition"/>
			<div aria-hidden="true" class="x04-space-break-orn">—</div>
			<p class="x03-co-body-text">The success of Personal Kanban among productivity aficionados underscores an important reality for anyone looking to escape the hyperactive hive mind: task boards are not just effective for coordinating work among teams, but can be incredibly effective in making sense of your individual obligations—even if you don’t have graduate-level training in supply chain management.</p>
			<p class="x04-body-text">As I mentioned briefly before, I’ve embraced this idea in my own professional life as a professor, where I use Trello boards to keep track of my obligations during my time as the director of graduate studies (DGS) for the computer science department at Georgetown. Following Jim Benson’s basic structure, I have <i class="calibre5">doing</i> and <i class="calibre5">done</i> columns. Following the lead of the Personal Kanban community, I also deploy my own custom blend of columns for making sense of the tasks I plan to work on but am not actively tackling at the moment (more on this to follow). Every Monday, I review the board, updating the positions of cards and deciding what I’m working on that week. Throughout the days that follow, I reference the board to figure out what I should do with any time put aside for my DGS duties. As new tasks arrive—in the form of emails, or phone calls, or, as is also common, students dropping by my office to ask questions I don’t know how to answer—I immediately put them on cards that I drop on my board to be dealt with later.</p>
			<p class="x04-body-text">Without this task board system, I’d be dependent on the hyperactive hive mind workflow to accomplish my work as DGS, which would consign me to juggling an avalanche of simultaneous, slow-moving email conversations throughout the day. I’d be <i class="calibre5">that guy</i>, with his laptop open in every meeting, phone always in hand while rushing across campus, keeping the proverbial plates spinning one frantic reply at a time. Without this system, in other words, my job would be nearly unbearable. With it, the overhead of this position is greatly reduced—obligations get dropped on a board, where they’re organized, and I then methodically accomplish them in times set aside for this purpose. Which is why, as you might expect, I’ve become a big advocate of deploying task boards not just to organize teams, but to organize your individual life as a knowledge worker as well.</p>
			<p class="x04-body-text">To aid in this effort, here are several best practices for making individual task boards work well for you.</p>
			<h4 class="x05-head-b">Individual Task Board Practice #1: Use More Than One Board</h4>
			<p class="x03-co-body-text">Many proponents of the Personal Kanban approach deploy a single board to make sense of all the tasks in their professional life. I recommend something slightly different: maintain a separate board for every major role in your professional life. At the moment, I play three largely distinct roles as a professor at my university: researcher, teacher, and DGS. I deploy a different task board for each of these roles, so when, for example, I’m thinking about teaching, I’m not also confronted with unrelated tasks about research or the graduate program. This reduces network switching and therefore increases the speed with which I’m able to resolve issues.</p>
			<p class="x04-body-text">Similarly, I’ve also found it useful to sometimes set up a dedicated task board for large projects (say, any project that might take more than a couple of weeks of effort). Not long ago, for example, I was the general chair of a major academic conference. The demands of this role were so numerous that I found it easier to contain them on their own task board, isolated from other areas of my academic life. Once that project ended, I discarded the board.</p>
			<p class="x04-body-text">There is, of course, a limit to how many boards you can manage before the upkeep becomes too arduous. This is why I think the rule of one board per role, and one board per major project, is probably about right. For most people this means two to four boards that run your life, which works well. If you have ten boards, on the other hand, the cost of switching between them will begin to swamp out the advantages of separating the tasks.</p>
			<h4 class="x05-head-b">Individual Task Board Practice #2: Schedule Regular Solo Review Meetings</h4>
			<p class="x03-co-body-text">When we discussed task boards for knowledge work teams, I argued that regular review meetings were the best way to update these boards. The same holds for your personal board. If you want to get the most out of this tool, you need set times each week to review and update your personal board. During these <i class="calibre5">solo review meetings</i>, go over all the cards on the board, moving them between columns and updating their statuses as needed. This shouldn’t take long: five to ten minutes is usually sufficient if you’re doing this regularly. And these sessions don’t have to be too frequent: I find once a week to work well. But they shouldn’t be skipped. As soon as you believe that a task board can no longer be trusted as a safe place to store your obligations, you’ll revert to more frantic, hyperactive hive mind messaging. Put your solo review meetings on your calendar and protect them like any other meeting or appointment. Individual task boards can significantly improve the quality of your life as a knowledge worker, but only if you invest sufficient time in their upkeep.</p>
			<h4 class="x05-head-b">Individual Task Board Practice #3: Add a “To Discuss” Column</h4>
			<p class="x03-co-body-text">In my work as DGS, there are several colleagues with whom I frequently need to discuss issues related to this role: my department chair, the graduate program manager, and the two other professors who make up the graduate committee I lead. For each of these three categories of colleagues, I added a column to my DGS task board labeled <i class="calibre5">to discuss at next meeting.</i> Whenever a task arises that requires input from one of these individuals, I sidestep my instinct to shoot them a quick email by instead moving the task to the appropriate <i class="calibre5">to discuss</i> column.</p>
			<p class="x04-body-text">I meet with my program manager weekly on a set schedule. During each meeting, we go through all the tasks that built up in his column since the last meeting. For my department chair and graduate committee, I wait until their <i class="calibre5">to discuss</i> columns are sufficiently crowded before I arrange our next meeting to review these tasks in one big batch.</p>
			<p class="x04-body-text">This hack might seem straightforward, but its impact on my work life has been profoundly positive. Imagine, for example, that a stack of five cards builds up under the <i class="calibre5">to discuss</i> column for my department chair during a given week. In a twenty-to-thirty-minute meeting, the two of us can come up with a reasonable plan for each of these cards. If I had to instead shoot off a quick email for each of the tasks, the result would be five different conversations occurring in my inbox that I’d have to tend throughout the week—leading to dozens of extra inbox checks each day and frustratingly fractured attention.</p>
			<p class="x04-body-text">If you want to unlock the power of personal task boards to minimize hive mind–style back-and-forth messaging, this hack is probably the most important one you’ll encounter in this chapter. A regular rhythm of efficient meetings can replace 90 percent of hive mind messaging, <i class="calibre5">if</i> you have a way to keep track of what needs to be discussed in these meetings. The task board makes this simple.</p>
			<h4 class="x05-head-b">Individual Task Board Practice #4: Add a “Waiting to Hear Back” Column</h4>
			<p class="x03-co-body-text">In collaborative knowledge work, it’s often necessary for progress on a task to be halted while you wait for feedback, or for an answer to a question, or for a key piece of information from someone else. If you use an individual task board to organize your obligations, it’s easy to keep track of these halted tasks by moving them to a column labeled <i class="calibre5">waiting to hear back.</i> When you move a task to this column, note on the card who you are waiting to hear back from and what the next step will be when you do hear back. This prevents you from losing track of efforts that have temporarily left your direct control, and allows you to make efficient progress when you learn what you need. Most important, these open obligations have a safe place to reside, freeing you from that lurking worry in the back of your mind that there are things being missed.</p>
			<h3 class="x05-head-a">A Follows B: Automatic Processes</h3>
			<p class="x03-co-body-text">Let’s return to Optimize Enterprises’ process for producing its daily content. Unlike the examples we’ve just been considering, this process includes no task boards or review meetings. Indeed, there are almost no interactions or decisions being made at all. Once Brian Johnson puts a new lesson idea onto the shared spreadsheet, it moves from one status to the next like clockwork. At each phase, the relevant people know exactly what’s expected of them.</p>
			<p class="x04-body-text">This style of <i class="calibre5">automatic</i> production process plays an important role in many knowledge work settings. Not all processes, however, can be made automatic. For this strategy to apply, the process in question must produce some output in a highly repeatable fashion, where the same steps are implemented, in the same order, by the same people, each time. The types of processes optimized with task boards, by contrast, are more diverse and dynamic, requiring collaborative decision making to figure out what tasks to tackle next and who should be responsible for them.</p>
			<p class="x04-body-text">Consider, for example, the task of putting together a quarterly budget for your team. This is probably something that can be reduced to a series of unambiguous steps that are executed the same way and in the same order each quarter, making the task a good candidate for automation. Updating your company website, on the other hand, is probably a project that’s less well defined and will require more discussion and planning to get right, making it better suited for a task board approach. The process for adding new client testimonials to the website, however, probably could be automated, as it’s highly repeatable. And so on.</p>
			<p class="x04-body-text">Once you’ve identified a process that does seem like a good candidate for automation, the following guidelines will help you succeed with the transformation:</p>
			<ol class="calibre9">
				<li class="x07-list-numbered-first">
					<p class="x07-list-bulleted-first1"><b class="calibre8">Partitioning:</b> Split the process into a series of well-defined phases that follow one after the other. For each phase, clearly specify what work must be accomplished and who is responsible.</p>
				</li>
				<li class="x07-list-numbered">
					<p class="x07-list-bulleted-first1"><b class="calibre8">Signaling:</b> Put in place a signaling or notification system that tracks the current phase of each output being generated by the process, allowing those involved to know when it’s their turn to take over the work.</p>
				</li>
				<li class="x07-list-numbered-last">
					<p class="x07-list-bulleted-first1"><b class="calibre8">Channeling:</b> Institute clear channels for delivering the relevant resources and information from one phase to the next (such as files in shared directories).</p>
				</li>
			</ol>
			<p class="x04-body-text">The daily lesson production process at Optimize clearly follows these guidelines. It’s divided into well-defined phases, uses a shared spreadsheet to signal each lesson’s current status, and makes use of shared directories to transfer files. Automatic processes, however, don’t necessarily have to rely on software systems. Over the years I’ve been a professor, for example, I’ve optimized the automatic process I use to work with my teaching assistants to grade problem sets for my larger courses. When I write my problem sets, I concurrently write detailed sample solutions for each of the problems. I also add some rough thoughts on grading the problems, capturing what I think would deserve full credit, versus partial credit, versus no credit. On the day that I post the problem set for my students, I send these documents to my TAs.</p>
			<p class="x04-body-text">The students hand in their problem sets at the beginning of class, and I bring them back to my office and leave them in a mail sorter I had installed on the wall in the hallway beside my door. The TAs will later come to pick them up. I don’t have to tell them to do this, as they already know the class schedule and therefore know the days that problem sets are returned. Once the TAs have the problem sets, they can start grading. As they assess the students’ answers, they might update my grading notes to reflect common issues they come across or particular grading heuristics they decide to apply.</p>
			<p class="x04-body-text">When they’re done, the TAs enter the students’ grades into a shared grading spreadsheet that I set up at the beginning of the semester, and put the problem sets back in the mail sorter by my door. On the day I plan to hand back the assignments, I use the spreadsheet to generate statistics about the problem set scores (e.g., average and median scores), which I paste onto a document that also includes the sample solutions and the grading notes updated by my TAs. (I discovered through trial and error that detailed sample solutions and grading notes significantly decreased the number of students complaining about their scores.) I print out the sample solutions right before class, then distribute them along with the graded assignments.</p>
			<p class="x04-body-text">This process always more or less follows the guidelines specified above. The phases are well defined, the current phase is clear to the people involved, and we have set channels in place for moving the relevant resources—problem sets, grading notes, solutions, grades—where they need to be. Unlike the Optimize example, however, a lot of this process is physical—involving actual pieces of paper being moved back and forth. This detail turns out not to matter much. As long as the phases and communication channels are clear, the process can be effective.</p>
			<p class="x04-body-text">Like any good automatic process, my approach to problem set grading eliminates basically all unscheduled communication between me and my TAs about grading. After I’m done writing a problem set, my only interaction with the material is to bring the problem sets to my office mail sorter after the students hand them in, and then to carry them back to the classroom along with sample solutions once the TAs are done grading them. The only email involved in this entire process is when I send the sample solutions to my TAs (though even this step could be further automated by giving my TAs access to a shared directory where I keep these solutions). None of my cognitive energy is dissipated worrying about logistics or trying to arrange meetings. This might sound superficial—like someone trying to avoid work—but the reality is that the energy and attention saved from administrative wrangling can be invested into activities that actually improve the quality of the class, like polishing lectures or answering student questions. This advantage is true of most automatic processes: eliminating unnecessary coordination does not just reduce frustration, but also increases resources to invest in the activities that really matter.</p>
			<p class="x04-body-text">Most organizations or teams have some processes that are good candidates for automation. This is not, however, a transformation to take lightly, as the overhead in working out all the details of these processes can be substantial. (It took me a couple of years of tinkering, for example, to arrive at the process I now use for problem set grading.) A good approach to figuring out whether this effort is warranted is to apply the <i class="calibre5">30x rule.</i> As explained by the management consultant Rory Vaden, in its original form, this rule states: “You should spend 30x the amount of time training someone to do a task than it would take you to do the task yourself one time.” We can loosely adapt this rule to automatic process construction: if your team or organization produces a given type of result thirty times a year or more, and it’s possible to transform its production into an automatic process, the transformation is probably worth the effort.</p>
			<h3 class="x05-head-a">Making Individual Work Automatic</h3>
			<p class="x03-co-body-text">Automatic processes aren’t just applicable to streamlining work conducted by teams; they can also apply to regularly occurring efforts that you typically perform on your own. As with the team processes, the goal remains to minimize both the cognitive energy and the back-and-forth communication required to finish your tasks, only now, the steps of the process are entirely under your control.</p>
			<p class="x04-body-text">For example, back when I used to write student advice books, I suggested that students create an individual automatic process for each type of regular assignment: problem sets, reading assignments, lab reports—anything they knew in advance they were going to have to do again and again throughout the semester. At the core of these processes was timing. I recommended that they designate set times on their calendar for when they’d accomplish each type of recurring work. Maybe Tuesday from four to six is when you write up your lab reports for BIO 101, and you tackle your statistics problem sets in the free blocks between classes you have on Mondays and Wednesdays from ten thirty to eleven thirty, and so on. I then recommended detailing how this work gets done during these set times, including where on campus you go to work, as well as any methods or materials you regularly use. The key was to reduce cognitive energy wasted on planning or decision making, allowing the student to focus simply on execution.</p>
			<p class="x04-body-text">This advice often proved revelatory for the students. Whereas they used to wander through their week, always guilty that they were behind, driven by impending deadlines into all-nighters, they could now confidently execute their automated schedule, secure in their knowledge that what needed to get done would get done, week after week. The reduced overhead and cognitive toll made the same amount of work suddenly seem to require a lot less energy.</p>
			<p class="x04-body-text">There’s no reason why this approach cannot also apply to non-academic knowledge work responsibilities. If there’s a particular outcome or result that you’re individually responsible for producing again and again, there’s probably nothing to lose by trying to come up with a more structured process that specifies when and how you tackle this work. As in my student example, start with the question of timing: add set times on your calendar, which you can treat like meetings attended only by you, for the specific steps you know have to get done. Then put in place some rules about how you execute these steps, searching for optimizations or hacks that can make each step a little easier to dispatch.</p>
			<p class="x04-body-text">Crucial to this optimization is to minimize the back-and-forth communication associated with your processes. Consider, for example, a consultant who is responsible for producing a weekly report for a client that describes the hours her team spent on the project. Assume she needs to gather these hours from her colleagues on the team. Further assume that she needs to give her boss a chance to look at the report before sending it out.</p>
			<p class="x04-body-text">Once our consultant puts aside a set time to work on this report each week, she can begin to optimize the communication required to complete it. She might, for example, create a shared spreadsheet where her colleagues can enter their hours. Two days before the report is due, she can send a reminder to her colleagues about entering their hours. In fact, she doesn’t even have to send this message manually, but can instead schedule it to be sent automatically (many email clients, including Gmail, offer this feature).</p>
			<p class="x04-body-text">Similarly, because the consultant now knows <i class="calibre5">when</i> she’ll work on the report each week, she can have a standing agreement with her boss about when the report will be ready for review. For example: “I’ll always have the report ready for your review in our shared Google Docs directory by 11:00 a.m. on Tuesday; if you have any comments, add them to the document during the day; I’ll check for any notes at 4:00 p.m. before I send off the final version to the client at the end of the day.”</p>
			<p class="x04-body-text">A weekly task that might have once generated multiple back-and-forth urgent emails now adds no extra messages to our consultant’s inbox. It also takes up much less cognitive energy. Our consultant sees the standing solo meetings on her calendar and executes the same steps every time: no urgency, no frantic messaging, no late-night worries about forgetting key steps.</p>
			<p class="x04-body-text">This is the promise of introducing automatic processes into your individual professional responsibilities. Whether you’re deploying complex automation or just following handcrafted procedures, these processes will reduce your dependence on the hyperactive hive mind workflow and reward you with extra cognitive energy and mental peace. Make automatic what you can reasonably make automatic, and only then worry about what to do with what remains.</p>
		</div>
			
	<br><br class="calibre4"/>
			<div aria-hidden="true" class="x04-space-break-orn-pb">—<a href="15_Chapter_6_The_Protoco.xhtml" class="next_page"> Next Page </a>—</div>
		

</body>
</html>
